.heading-main
  .container
    h1
      | Dashboard
.container.content-main
  .modal-popup(*ngIf="popupLogic.edit") 
    .row
      .col-sm-12
        .add-math-logic
          h4
            | New MatchLogic
          .row
            .form-inline
              .form-group
                label
                  | Boolean
                select.form-control([(ngModel)]="tmps.logic.bool")
                  option(value="")
                    | None
                  option(*ngFor="let op of getBoolTypes()", [value]="op.code")
                    | {{op.name}}
          .row
            .col-sm-12
              button.btn.btn-default( (click)="addMatchLogic()" type='button')
                | Add 

        .add-match
          h4
            | New Match
          .row(*ngIf="selected.quest != null")
            label 
              | Target Option
            .form-group
              label.col-sm-1
                | Operator
              .col-sm-1
                select.form-control([(ngModel)]="tmps.logic.operator")
                  option(*ngFor="let op of getOperatorTypes()", [ngValue]="op")
                    | {{op.name}}
              label.col-sm-1
                | Group
              .col-sm-2
                select.form-control([(ngModel)]="selected.forLogic.group", (change)="forLogicSelectedGroup()")
                  option(*ngFor="let st of selected.quest.groups",[ngValue]="st")
                    | {{st.label.data}}
              label.col-sm-1
                | Question
              .col-sm-2
                select.form-control(*ngIf="selected.forLogic.group != null", [(ngModel)]="selected.forLogic.target",(change)="forLogicSelectedTarget()")
                  option(*ngFor="let q of selected.forLogic.group.questions",[ngValue]="q")
                    | {{q.code}}
              label.col-sm-1
                | Option
              .col-sm-2
                select.form-control(*ngIf="selected.forLogic.target != null", [(ngModel)]="selected.forLogic.option")
                  option(*ngFor="let o of selected.forLogic.target.options",[ngValue]="o")
                    | {{o.label.data}}
            button.btn.btn-default.btn-login( (click)="addMatch()" type='button')
              | Add 
    .row
      .col-sm-12
        tree-node(*ngIf="selected.logic.logic.hierarchy != null", [node]='selected.logic.logic.hierarchy', [currentNode]="selected.logic.logic.hierarchy",(selectedNode)="handleSelectedNode($event)")
    .row
      .col-sm-12
        button.btn.btn-default((click)="cancelPopupLogic(false)")
          | Close

  .modal-popup(*ngIf="popupLogic.manager")
    .row
      .col-sm-12
        h3
          | Logics
        button.btn.btn-primary((click)="startAddLogic()")
          | + Logic
        .table-responsive(*ngIf="selected.logic.target != null")
          table.table
            thead
              tr
                th
                  | Action
                th
                  | Actions
            tbody(*ngIf="selected.logic.target.logics != null")
              tr(*ngFor="let o of selected.logic.target.logics")
                td
                  | {{o.action}}
                td
                  a.btn.btn-default((click)="startEditLogic(o)")
                    | Edit
                  a.btn.btn-default((click)="deleteLogic(o)")
                    | Delete
    .row
      .col-sm-12
        button.btn.btn-default((click)="cancelPopupLogic(true)")
          | Close

.div-group
  .md-tab(label='Questionaries')
    .questionaries-list(*ngIf="questionaries != null")
      .heading-action
        h3.heading
          | Available Questionaries ({{questionaries.length}})
        .actions
          a((click)="startCreateQuest()")
            | + Questionary
      .table-responsive
        table.table
          thead
            tr
              th
                | Code
              th
                | Name
              th
                | Actions
          tbody
            tr(*ngFor="let q of questionaries")
              td
                | {{ q.code }}
              td
                | {{ q.label.data }}
              td
                button(md-button, (click)="takeQuestionary(q)")
                  | Take!
                button(md-button, (click)="startEditQuest(q)")
                  | Edit!
                button(md-button, (click)="deleteQuestionary(q)")
                  | Delete!
  .md-tab(label='Taken Quizzes')
    .taken-quizzes-list(*ngIf="takenQuizzes != null")
      .heading-action
        h3.heading
          | Taken Questionaries ({{takenQuizzes.length}})
        .actions
      .table-responsive
        table.table
          thead
            tr
              th
                | Started
              th
                | Questionary Code
              th
                | Questionary Name
              th
                | Actions
          tbody
            tr(*ngFor="let tq of takenQuizzes")
              td
                | {{tq.created_at.date}}
              td
                | {{tq.questionary.code}}
              td
                | {{tq.questionary.label.data}}
              td
                button(md-button, (click)="continueTakenQuiz(tq);")
                  | Continue
                button(md-button, (click)="seeHistory(tq);")
                  | History
                button(md-button, (click)="deleteTakenQuiz(tq);")
                  | Delete


